/**
 * –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –î–õ–Ø –û–í–ï–†–õ–ï–Ø SHUD
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∞ –∏ —Å–∫—Ä–æ–ª–ª–±–∞—Ä–∞–º–∏
 */

class OverlayFixes {
    constructor() {
        this.screenWidth = window.screen.width;
        this.screenHeight = window.screen.height;
        this.windowWidth = window.innerWidth;
        this.windowHeight = window.innerHeight;
        this.devicePixelRatio = window.devicePixelRatio || 1;
        
        console.log('üîß OverlayFixes: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è');
        console.log('üì± –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞:', this.screenWidth + 'x' + this.screenHeight);
        console.log('üñ•Ô∏è  –†–∞–∑–º–µ—Ä –æ–∫–Ω–∞:', this.windowWidth + 'x' + this.windowHeight);
        console.log('üìê Pixel Ratio:', this.devicePixelRatio);
        
        this.init();
    }
    
    init() {
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', () => this.applyFixes());
        } else {
            this.applyFixes();
        }
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
        window.addEventListener('resize', () => this.applyFixes());
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏
        window.addEventListener('orientationchange', () => this.applyFixes());
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥ (–Ω–∞ —Å–ª—É—á–∞–π –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞)
        setInterval(() => this.applyFixes(), 5000);
    }
    
    applyFixes() {
        this.fixScrollbars();
        this.fixResolution();
        this.fixHUDElements();
        this.fixOverflow();
        this.fixIframes();
        this.fixTables();
        this.fixForms();
        this.fixModals();
        
        console.log('‚úÖ OverlayFixes: –í—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã');
    }
    
    /**
     * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫—Ä–æ–ª–ª–±–∞—Ä–æ–≤
     */
    fixScrollbars() {
        // –°–∫—Ä—ã–≤–∞–µ–º —Å–∫—Ä–æ–ª–ª–±–∞—Ä—ã –¥–ª—è –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        const elements = document.querySelectorAll('*');
        elements.forEach(element => {
            if (element.style) {
                element.style.overflow = 'hidden';
                element.style.scrollbarWidth = 'none';
                element.style.msOverflowStyle = 'none';
            }
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º CSS –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è —Å–∫—Ä–æ–ª–ª–±–∞—Ä–æ–≤
        this.addCSS(`
            * {
                scrollbar-width: none !important;
                -ms-overflow-style: none !important;
            }
            *::-webkit-scrollbar {
                display: none !important;
                width: 0 !important;
                height: 0 !important;
            }
        `);
    }
    
    /**
     * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∞
     */
    fixResolution() {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
        const currentWidth = window.innerWidth;
        const currentHeight = window.innerHeight;
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –¥–ª—è –æ–≤–µ—Ä–ª–µ—è
        const overlayContainer = document.querySelector('.overlay-container') || document.body;
        
        if (overlayContainer) {
            overlayContainer.style.width = currentWidth + 'px';
            overlayContainer.style.height = currentHeight + 'px';
            overlayContainer.style.overflow = 'hidden';
            overlayContainer.style.position = 'fixed';
            overlayContainer.style.top = '0';
            overlayContainer.style.left = '0';
            overlayContainer.style.zIndex = '9999';
        }
        
        // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä—ã HUD —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        this.fixHUDSizes(currentWidth, currentHeight);
    }
    
    /**
     * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤ HUD —ç–ª–µ–º–µ–Ω—Ç–æ–≤
     */
    fixHUDSizes(width, height) {
        // –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
        const hudElements = {
            '#top_panel': { width: Math.min(width * 0.8, 1600), height: 70 },
            '#left_team': { width: Math.min(width * 0.2, 400), height: 70 },
            '#right_team': { width: Math.min(width * 0.2, 400), height: 70 },
            '#center_section': { width: Math.min(width * 0.4, 600), height: 70 },
            '#radar-container': { width: Math.min(width * 0.15, 200), height: Math.min(height * 0.15, 200) }
        };
        
        Object.entries(hudElements).forEach(([selector, sizes]) => {
            const element = document.querySelector(selector);
            if (element) {
                element.style.width = sizes.width + 'px';
                element.style.height = sizes.height + 'px';
                element.style.overflow = 'hidden';
            }
        });
    }
    
    /**
     * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ HUD —ç–ª–µ–º–µ–Ω—Ç–æ–≤
     */
    fixHUDElements() {
        const hudSelectors = [
            '#top_panel', '#left_team', '#right_team', '#center_section',
            '#radar-container', '#players_alive', '#timers', '#bomb_bar',
            '#defuse_bar', '#alert_middle_holder'
        ];
        
        hudSelectors.forEach(selector => {
            const element = document.querySelector(selector);
            if (element) {
                element.style.overflow = 'hidden';
                element.style.scrollbarWidth = 'none';
                element.style.msOverflowStyle = 'none';
            }
        });
    }
    
    /**
     * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ overflow
     */
    fixOverflow() {
        // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å overflow
        const overflowElements = document.querySelectorAll('[style*="overflow"], [class*="scroll"], [class*="overflow"]');
        
        overflowElements.forEach(element => {
            element.style.overflow = 'hidden';
            element.style.scrollbarWidth = 'none';
            element.style.msOverflowStyle = 'none';
        });
    }
    
    /**
     * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ iframe
     */
    fixIframes() {
        const iframes = document.querySelectorAll('iframe');
        iframes.forEach(iframe => {
            iframe.style.overflow = 'hidden';
            iframe.style.scrollbarWidth = 'none';
            iframe.style.msOverflowStyle = 'none';
        });
    }
    
    /**
     * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
     */
    fixTables() {
        const tables = document.querySelectorAll('table, .players-table, .player-stats-table');
        tables.forEach(table => {
            table.style.overflow = 'hidden';
            table.style.scrollbarWidth = 'none';
            table.style.msOverflowStyle = 'none';
        });
    }
    
    /**
     * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º
     */
    fixForms() {
        const forms = document.querySelectorAll('form');
        forms.forEach(form => {
            form.style.overflow = 'hidden';
            form.style.scrollbarWidth = 'none';
            form.style.msOverflowStyle = 'none';
        });
    }
    
    /**
     * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
     */
    fixModals() {
        const modals = document.querySelectorAll('.modal, .popup, .overlay');
        modals.forEach(modal => {
            modal.style.overflow = 'hidden';
            modal.style.scrollbarWidth = 'none';
            modal.style.msOverflowStyle = 'none';
        });
    }
    
    /**
     * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ CSS —Å—Ç–∏–ª–µ–π
     */
    addCSS(css) {
        const style = document.createElement('style');
        style.textContent = css;
        style.id = 'overlay-fixes-styles';
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å—Ç–∏–ª–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
        const oldStyle = document.getElementById('overlay-fixes-styles');
        if (oldStyle) {
            oldStyle.remove();
        }
        
        document.head.appendChild(style);
    }
    
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ
     */
    getSystemInfo() {
        return {
            screenWidth: this.screenWidth,
            screenHeight: this.screenHeight,
            windowWidth: this.windowWidth,
            windowHeight: this.windowHeight,
            devicePixelRatio: this.devicePixelRatio,
            userAgent: navigator.userAgent,
            platform: navigator.platform,
            language: navigator.language
        };
    }
    
    /**
     * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
     */
    forceApply() {
        console.log('üöÄ OverlayFixes: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π');
        this.applyFixes();
        
        // –ü–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–∏–º–µ–Ω—è–µ–º —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
        setTimeout(() => this.applyFixes(), 100);
        setTimeout(() => this.applyFixes(), 500);
        setTimeout(() => this.applyFixes(), 1000);
    }
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
let overlayFixes;

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
        overlayFixes = new OverlayFixes();
    });
} else {
    overlayFixes = new OverlayFixes();
}

// –î–µ–ª–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–º –≥–ª–æ–±–∞–ª—å–Ω–æ
window.overlayFixes = overlayFixes;

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof module !== 'undefined' && module.exports) {
    module.exports = OverlayFixes;
}
